{"version":3,"sources":["facebook.svg","reddit.svg","website.jpg","linkedin.svg","naruto_run.png","cloud.png","ball.png","school.png","graduation.png","grass.png","logo.svg","face.js","Game.js","ImageInput.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","loadModels","a","MODEL_URL","process","faceapi","getFullFaceDescription","blob","inputSize","scoreThreshold","OPTION","useTinyModel","img","withFaceLandmarks","withFaceDescriptors","fullDesc","dr","INIT_STATE","imageURL","require","crop","unit","x","y","width","height","ascpect","Game","Component","state","window","innerHeight","xjump","direction","speed","obcount","obpath","innerWidth","obstep","obspeed","alertcount","draw","requestAnimationFrame","grass","document","getElementById","naruto","ball","facebook","school","graduation","ctx","canvas","getContext","x1","setState","cancelAnimationFrame","drawImage","alert","count","path","leap","event","getElementsByClassName","style","display","scrollIntoView","behavior","cloud","position","left","button","top","textAlign","id","src","onClick","this","ref","App","className","profile","alt","href","target","linkedin","reddit","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a902409f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/facebook.b4518466.svg\";","module.exports = __webpack_public_path__ + \"static/media/reddit.3c6c064c.svg\";","module.exports = __webpack_public_path__ + \"static/media/website.1554f448.jpg\";","module.exports = __webpack_public_path__ + \"static/media/linkedin.7fbf3f53.svg\";","module.exports = __webpack_public_path__ + \"static/media/naruto_run.6e1e4d82.png\";","module.exports = __webpack_public_path__ + \"static/media/cloud.55ecba25.png\";","module.exports = __webpack_public_path__ + \"static/media/ball.e33ba831.png\";","module.exports = __webpack_public_path__ + \"static/media/school.63faf745.png\";","module.exports = __webpack_public_path__ + \"static/media/graduation.23c185ae.png\";","module.exports = __webpack_public_path__ + \"static/media/grass.43c10471.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import * as faceapi from 'face-api.js';\r\n// Load models and weights\r\nexport async function loadModels() {\r\n  const MODEL_URL = process.env.PUBLIC_URL + '/models';\r\n  await faceapi.loadTinyFaceDetectorModel(MODEL_URL);\r\n  await faceapi.loadFaceLandmarkTinyModel(MODEL_URL);\r\n  await faceapi.loadFaceRecognitionModel(MODEL_URL);\r\n}\r\n\r\nexport async function getFullFaceDescription(blob, inputSize = 512) {\r\n  // tiny_face_detector options\r\n  let scoreThreshold = 0.5;\r\n  const OPTION = new faceapi.TinyFaceDetectorOptions({\r\n    inputSize,\r\n    scoreThreshold\r\n  });\r\n  const useTinyModel = true;\r\n\r\n  // fetch image to api\r\n  let img = await faceapi.fetchImage(blob);\r\n\r\n  // detect all faces and generate full description from image\r\n  // including landmark and descriptor of each face\r\n  let fullDesc = await faceapi\r\n    .detectAllFaces(img, OPTION)\r\n    .withFaceLandmarks(useTinyModel)\r\n    .withFaceDescriptors();\r\n  return fullDesc;\r\n}\r\n","import React, { Component } from 'react';\r\nimport facebook from './facebook.svg';\r\nimport reddit from './reddit.svg';\r\nimport naruto from './naruto_run.png';\r\nimport cloud from './cloud.png';\r\nimport ball from './ball.png';\r\nimport school from './school.png';\r\nimport graduation from './graduation.png';\r\nimport grass from './grass.png';\r\nimport './Game.css';\r\nimport ImageInput from './ImageInput';\r\nvar dr;\r\nclass Game extends Component  {\r\n\r\n  state = {\r\n    height: window.innerHeight - window.innerHeight*0.5,\r\n    xjump: 5,\r\n    direction: -1,\r\n    speed: 0.25,\r\n    obcount: 1,\r\n    obpath: window.innerWidth-50,\r\n    obstep: 0.5,\r\n    obspeed: 0.25,\r\n    alertcount: 1,\r\n  }\r\n  // draw = ()=>{\r\n  //   var xm = this.state.x1;\r\n  //   var xm1 = this.state.x2;\r\n  //   var xm2 = this.state.xjump;\r\n  //   //console.log(xm);\r\n  //   //console.log(xm1);\r\n  //   //console.log(xm2);\r\n  //   const ctx = this.refs.canvas.getContext(\"2d\");\r\n  //   var stick = this.refs.stick;\r\n  //   ctx.clearRect(0,0,this.refs.canvas.width,this.refs.canvas.height);\r\n  //   if(this.state.click==false)\r\n  //     ctx.drawImage(stick,0,\"this.refs.canvas.height-50\",100,150);\r\n  //   ctx.drawImage(stick,xm,this.refs.canvas.height-50,100,150);\r\n  //   xm-=5;\r\n  //   this.setState({x1:xm});\r\n  //   if(xm<0){\r\n  //     ctx.drawImage(stick,xm1,this.refs.canvas.height-50,50,50);\r\n  //     xm1-=10;\r\n  //     this.setState({x2:xm1});\r\n  //   }\r\n  //   if(this.state.click==true){\r\n  //       if(this.state.xjump>55){\r\n  //           var xm3 = this.state.x3;\r\n  //           ctx.drawImage(stick,0,xm3,50,50);\r\n  //           xm3+=5;\r\n  //           this.setState({x3:xm3});\r\n  //           if(this.state.x3==this.refs.canvas.height-50){\r\n  //             //clearInterval(this.timerID2);\r\n  //             ctx.drawImage(stick,0,this.refs.canvas.height-50,50,50);\r\n  //             this.setState({x3:this.refs.canvas.height-50});\r\n  //             this.setState({xjump:0});\r\n  //             this.setState({click:false});\r\n  //           }\r\n  //         //clearInterval(this.timerID1);\r\n  //         //this.timerID2 = setInterval(()=>this.down(),1);\r\n  //         console.log(xm4);\r\n  //       }else{\r\n  //         var xm4 = this.state.xjump;\r\n  //         ctx.drawImage(stick,0,this.refs.canvas.height-50-xm4,50,50);\r\n  //         xm4+=5;\r\n  //         this.setState({xjump:xm4});\r\n  //         this.setState({x3:this.refs.canvas.height-50-xm4});\r\n  //       }\r\n  //   }\r\n  //   var dr = requestAnimationFrame(this.draw);\r\n  //   if(this.state.x1==0){\r\n  //     if(this.state.x3==this.refs.canvas.height-50){\r\n  //       alert('One More Chance');\r\n  //     }\r\n  //   }else if(this.state.x2==0){\r\n  //     if(this.state.x3==this.refs.canvas.height-50){\r\n  //       ctx.clearRect(0,0,this.refs.canvas.width,this.refs.canvas.height);\r\n  //       //window.removeEventListener(\"scroll\", this.handleScroll);\r\n  //       cancelAnimationFrame(dr);\r\n  //       window.onscroll = function() {};\r\n  //       this.setState({game_status:false});\r\n  //       this.setState({x1:window.innerWidth});\r\n  //       this.setState({x2:window.innerWidth});\r\n  //       alert('Maccha/Macchi It\\'s okay! Atleast you tried :)');\r\n  //     }\r\n  //   }else if(this.state.x2<0){\r\n  //     ctx.clearRect(0,0,this.refs.canvas.width,this.refs.canvas.height);\r\n  //     //window.removeEventListener(\"scroll\", this.handleScroll);\r\n  //     cancelAnimationFrame(dr);\r\n  //     window.onscroll = function() {};\r\n  //     this.setState({game_status:false});\r\n  //     this.setState({x1:window.innerWidth});\r\n  //     this.setState({x2:window.innerWidth});\r\n  //     //alert('Okay! You scroll now');\r\n  //   }\r\n  // }\r\n  //\r\n  // handleScroll = (event)=>{\r\n  //   if(this.container.scrollHeight>0){\r\n  //     window.onscroll = function() {\r\n  //           window.scrollTo(0, window.innerHeight);\r\n  //     };\r\n  //   }\r\n  // }\r\n  //\r\n  // getScrollHeight = (event) =>{\r\n  //   alert(this.container.getScrollHeight);\r\n  // }\r\n  //\r\n  // componentDidMount(){\r\n  //   //window.addEventListener('scroll',this.getScrollHeight());\r\n  //   var dr = requestAnimationFrame(this.draw);\r\n  //   //var timerID = setInterval(()=>this.draw(),5);\r\n  //   //console.log(this.state.x1);\r\n  //   //window.addEventListener(\"scroll\", this.handleScroll);\r\n  // }\r\n  //\r\n  // leap = ()=>{\r\n  //   //this.timerID1 = setInterval(()=>this.jump(),5);\r\n  //   document.getElementsByClassName('App-body')[0].style.display = \"flex\";\r\n  //   if(this.state.click==false)\r\n  //     this.setState({click:true});\r\n  //   if(this.state.game_status==false){\r\n  //     this.setState({game_status:true});\r\n  //     var dr = requestAnimationFrame(this.draw);\r\n  //     //console.log(this.state.x1);\r\n  //     //window.addEventListener(\"scroll\", this.handleScroll);\r\n  //   }\r\n  //\r\n  // <canvas ref=\"canvas\" id=\"canvas\">\r\n  // <img  ref=\"stick\" src={facebook} id=\"image1\"/>\r\n  // </canvas>\r\n    // obstacle = () =>{\r\n    //   var ob = window.requestAnimationFrame(this.obstacle);\r\n    //   let ball = document.getElementById('ball');\r\n    //   let facebook = document.getElementById('facebook');\r\n    //   let graduation = document.getElementById('graduation');\r\n    //   const ctx = document.getElementById('canvas2');\r\n    //   ctx.width = window.innerWidth;\r\n    //   ctx.height = window.innerHeight;\r\n    //   const canvas = ctx.getContext(\"2d\");\r\n    //   canvas.drawImage(ball,0,0,300,300);\r\n    // }\r\n\r\n    draw = () => {\r\n      dr = window.requestAnimationFrame(this.draw);\r\n      let grass = document.getElementById('grass');\r\n      let naruto = document.getElementById('naruto');\r\n      let ball = document.getElementById('ball');\r\n      let facebook = document.getElementById('facebook');\r\n      let school = document.getElementById('school');\r\n      let graduation = document.getElementById('graduation');\r\n      const ctx = document.getElementById('canvas');\r\n      ctx.width = window.innerWidth;\r\n      ctx.height = window.innerHeight;\r\n      const canvas = ctx.getContext(\"2d\");\r\n      var x = this.state.height + (this.state.xjump*this.state.direction);\r\n      var x1 = this.state.obpath - this.state.obstep;\r\n      this.setState({obpath:x1})\r\n      this.setState({height:x});\r\n      if(this.state.height < 0){\r\n        this.setState({direction:1})\r\n      }else if (this.state.height > window.innerHeight - window.innerHeight*0.5){\r\n        this.setState({xjump:0});\r\n        this.setState({speed:0});\r\n        this.setState({direction:-1});\r\n        this.setState({height:window.innerHeight - window.innerHeight*0.5})\r\n      }\r\n      if(this.state.height > window.innerHeight - window.innerHeight*0.5 && this.state.obcount===5){\r\n        window.cancelAnimationFrame(dr);\r\n      }\r\n      var speed = this.state.xjump+this.state.speed;\r\n      var obstep = this.state.obstep+this.state.obspeed;\r\n      this.setState({obstep:obstep});\r\n      this.setState({xjump:speed});\r\n      canvas.drawImage(grass,0, (window.innerHeight) - (window.innerHeight*0.5), (window.innerWidth), (window.innerHeight*0.5));\r\n      canvas.drawImage(naruto,0,this.state.height, (window.innerWidth*0.25), (window.innerHeight*0.3));\r\n      if(this.state.obcount===1)\r\n        canvas.drawImage(ball,this.state.obpath, (window.innerHeight) - (window.innerHeight*0.2), (window.innerWidth*0.1), (window.innerHeight*0.15));\r\n      else if(this.state.obcount===2){\r\n        canvas.drawImage(facebook,this.state.obpath, (window.innerHeight) - (window.innerHeight*0.2), (window.innerWidth*0.1), (window.innerHeight*0.15));\r\n      }\r\n      else if(this.state.obcount===3){\r\n        canvas.drawImage(school,this.state.obpath, (window.innerHeight) - (window.innerHeight*0.2), (window.innerWidth*0.1), (window.innerHeight*0.15));\r\n      }else if (this.state.obcount===4){\r\n        canvas.drawImage(graduation,this.state.obpath, (window.innerHeight) - (window.innerHeight*0.2), (window.innerWidth*0.1), (window.innerHeight*0.15));\r\n      }\r\n      if(this.state.height>= (window.innerHeight) - (window.innerHeight*0.55) && this.state.obpath<=(window.innerWidth*0.1) && this.state.obcount<=3 && this.state.alertcount===1){\r\n        alert('Keep Going!');\r\n        this.setState({alertcount:0});\r\n      }\r\n      if(this.state.obpath<=(window.innerWidth*0.1) && this.state.obcount===4 && this.state.alertcount===1){\r\n        alert('Actually I haven\\'t graduated yet');\r\n        this.setState({alertcount:0});\r\n      }\r\n      if(this.state.obpath<=0){\r\n        this.setState({alertcount:1});\r\n        var count = this.state.obcount;\r\n        count+=1;\r\n        this.setState({obcount:count});\r\n        var path = window.innerWidth-50;\r\n        this.setState({obpath:path});\r\n        this.setState({obspeed:0.25});\r\n        this.setState({obstep:1});\r\n      }\r\n    }\r\n\r\n    leap = (event) => {\r\n      if(this.state.obcount>=5){\r\n        document.getElementsByClassName('App-body')[0].style.display = \"flex\";\r\n        document.getElementsByClassName('App-body')[0].scrollIntoView({behavior: 'smooth'});\r\n      }\r\n      else{\r\n        let cloud = document.getElementById('cloud');\r\n        cloud.style.display = \"flex\";\r\n        cloud.style.position = \"absolute\";\r\n        cloud.style.left = \"10vw\";\r\n        let grass = document.getElementById('grass');\r\n        cloud.style.display = \"flex\";\r\n        cloud.style.position = \"absolute\";\r\n        let button = document.getElementById('leap');\r\n        button.style.position = \"absolute\";\r\n        button.style.top = \"130vh\";\r\n        button.style.left = \"40vw\";\r\n        button.textAlign = \"center\";\r\n        this.setState({xjump:1});\r\n        this.setState({speed:0.1});\r\n        this.setState({obspeed:0.25});\r\n        this.setState({obstep:0.5});\r\n        window.cancelAnimationFrame(dr);\r\n        this.draw();\r\n      }\r\n    }\r\n\r\n  render()  {\r\n    return  (\r\n      <div id=\"Game\">\r\n      <img src={cloud} id=\"cloud\"/>\r\n        <button id=\"leap\" onClick={this.leap}>\r\n            Click to <i>LEAP</i>\r\n        </button>\r\n        <canvas ref=\"canvas\" id=\"canvas\">\r\n          <img src={grass} id=\"grass\"/>\r\n          <img  src={naruto} id=\"naruto\"/>\r\n          <img  src={ball} id=\"ball\"/>\r\n          <img  src={facebook} id=\"facebook\"/>\r\n          <img  src={school} id=\"school\"/>\r\n          <img  src={graduation} id=\"graduation\"/>\r\n        </canvas>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Game;\r\n","import React, { Component } from 'react';\r\nimport {loadModels, getFullFaceDescription} from './face';\r\nimport ReactCrop from 'react-image-crop';\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\n\r\n// Import image to test API\r\nconst testImg = require('./website.jpg');\r\n\r\n// Initial State\r\nconst INIT_STATE = {\r\n  imageURL: testImg,\r\n  fullDesc: null,\r\n  crop: {\r\n    unit: '%', // default, can be 'px' or '%'\r\n    x: 130,\r\n    y: 50,\r\n    width: 200,\r\n    height: 200,\r\n    ascpect: 1/1\r\n  }\r\n};\r\n\r\nclass ImageInput extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { ...INIT_STATE};\r\n  }\r\n  componentWillMount = async () => {\r\n    await loadModels();\r\n    await this.handleImage(this.state.imageURL);\r\n  };\r\n\r\n  handleImage = async (image = this.state.imageURL) => {\r\n    await getFullFaceDescription(image).then(fullDesc => {\r\n      //console.log(fullDesc[0].detection.box);\r\n      this.setState({ fullDesc });\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { imageURL } = this.state;\r\n    const { crop } = this.state;\r\n    return (\r\n      <div>\r\n        <ReactCrop src={imageURL} alt=\"imageURL\" crop={crop}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImageInput;\r\n","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport facebook from './facebook.svg';\r\nimport linkedin from './linkedin.svg';\r\nimport reddit from './reddit.svg';\r\nimport profile from './website.jpg';\r\nimport './App.css';\r\nimport Game from './Game';\r\nimport ImageInput from './ImageInput';\r\n\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <div>\r\n          <img src={profile} className=\"Circle\" alt=\"Profile Picture\"/>\r\n        </div>\r\n        <p className=\"Tag\">\r\n          A Dreamer on his way to become an Achiever\r\n        </p>\r\n      </header>\r\n      <div className=\"Game\">\r\n        <Game/>\r\n      </div>\r\n      <body className=\"App-body\">\r\n        <div className=\"Rectangle\">\r\n          <h1>\r\n            About Me:\r\n          </h1>\r\n          <p className=\"about-me\">\r\n            I like doing things and I am trying to do a lot of things currently.<br/>\r\n            I am a junior year, ECE student at NIT TRICHY.<br/>\r\n            Hit me up on my social media handles given below, if you would like to discuss anything like anyyyythinggg. :)\r\n          </p>\r\n        </div>\r\n        <div id=\"footer\">\r\n        <a href=\"https://www.facebook.com/arkrockeytherockey\" target=\"_blank\">\r\n          <img src={facebook} alt=\"facebook\" id=\"facebook\" />\r\n        </a>\r\n        <a href=\"https://www.linkedin.com/in/ark-srivastava-252542160\" target=\"_blank\">\r\n          <img src={linkedin} alt=\"linkedin\" id=\"linkedin\" />\r\n        </a>\r\n        <a href=\"https://www.reddit.com/user/rarsahki\" target=\"_blank\">\r\n          <img src={reddit} alt=\"reddit\" id =\"reddit\" target=\"_blank\"/>\r\n        </a>\r\n        </div>\r\n      </body>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}